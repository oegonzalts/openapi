get:
  operationId: GetNestedAffiliates
  responses:
    '200':
      description: Ok
      content:
        application/json:
          schema:
            $ref: ../components/schemas/StandardResponse_GetAffiliatesResponse_.yaml
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: ../components/schemas/E_FORBIDDEN_403.yaml
    '404':
      description: Ok
      content:
        application/json:
          schema:
            $ref: ../components/schemas/E_RESOURCE_NOT_FOUND_404.yaml
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: ../components/schemas/E_SERVER_ERROR_500.yaml
  description: Get all sub-affiliates of an affiliaate
  summary: Get nested Affiliates by affiliate ID
  tags:
    - Affiliates
  security: []
  parameters:
    - description: Root Affiliate ID from which to get nested affiliates
      in: query
      name: parentAffiliateId
      required: true
      schema:
        type: string
    - description: >-
        (Required) Affiliate id used as root to retrieve hierarchy of user
        belonging to affiliateId or to its tree of sub-affiliates
      in: query
      name: affiliateId
      required: true
      schema:
        type: string
    - description: The search text that will be used to filter by affiliate naname
      in: query
      name: searchText
      required: false
      schema:
        type: string
    - description: User field to order users by (default order is ascending)
      in: query
      name: orderField
      required: false
      schema:
        type: string
    - description: Order by field either "asc" or "desc" (ascending or descending)
      in: query
      name: orderBy
      required: false
      schema:
        type: string
    - description: Filter by status of the affiliates ("active" or "disabled")
      in: query
      name: status
      required: false
      schema:
        type: string
    - description: Boolean to filter by archived users
      in: query
      name: isArchived
      required: false
      schema:
        type: string
